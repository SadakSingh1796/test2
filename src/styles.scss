/* You can add global styles to this file, and also import other style files */

@import "ngx-owl-carousel-o/lib/styles/scss/owl.carousel";
@import "ngx-owl-carousel-o/lib/styles/scss/owl.theme.default";
// @import "./stylesfiles/ngtt-double-elimination-styles.scss";

// @import "./stylesfiles/ngtt-reset.scss";

@import "./stylesfiles/ngtt-single-elimination-styles.scss";

@import "./stylesfiles/ngtt-styles.scss";
@import "./stylesfiles/ngtt-variables.scss";

$green-color: #01534d;
$green-container: #1b403a;
$white-container: #f5f5f5;

:root {
  --primary-color: #ffffff;
  --green-color: #01534d;
  --text-color: #000000;
  --main-color: #1b403a;
  --secondary-color: #929292;
  --combinating-color: #ff783e;
  --secondary_dark-color: #555555;
  --f1-color: #f1f1f1;

  --main-color-light: #284d46;
  --success-color: #00a510;
  --danger-color: #ca0d0d;
  --common-border-radius: 7px;
  --On-Live-bg: #b0b0b0;
}

$mediaQueries: (
  mobile: 750px,
  tab: 1000px,
);

@mixin query($screen) {
  @each $key, $value in $mediaQueries {
    @if ($screen ==$key) {
      @media only screen and (max-width: $value) {
        @content;
      }
    }
  }
}

// @font-face {
//   font-family: "gotham-light";
//   src: url("./assets/Gotham-Font/GothamLight.ttf") format("truetype");
// }

// @font-face {
//   font-family: "gotham-mid";
//   src: url("./assets/Gotham-Font/GothamMedium.ttf") format("truetype");
// }

// @font-face {
//   font-family: "gotham-normal";
//   src: url("./assets/Gotham-Font/GothamBook.ttf") format("truetype");
// }
// @font-face {
//   font-family: "gotham-book";
//   src: url("./assets/Gotham-Font/GothamBook.ttf") format("truetype");
// }
@font-face {
  font-family: "Gotham";
  src: url("./assets/Gotham-Font/Gotham-Book.woff2") format("woff2"),
    url("./assets/Gotham-Font/Gotham-Book.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Gotham", sans-serif !important;
  font-weight: 500 !important;
  color: black;
  font-size: 85%;
  box-sizing: border-box;

  .switch {
    .p-inputswitch {
      scale: 0.6 !important;
    }

    .p-inputswitch-checked {
      .p-inputswitch-slider {
        background-color: var(--main-color);
      }
    }
  }

  .p-toast .p-toast-message .p-toast-message-content {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
  }

  // .p-toast-bottom-center {
  //     width: auto;
  // }
  .p-toast .p-toast-message .p-toast-message-content .p-toast-message-text {
    margin: 0 2rem 0 1rem;
  }

  input::placeholder {
    font-size: 85%;
  }

  p-dropdown {
    width: 100%;
  }

  .p-multiselect {
    width: 100%;
    margin: 0.6rem 0 !important;
    max-height: 38px;

    .p-multiselect-label-container {
      display: flex;
      align-self: center;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .p-inputtext {
    max-height: 38px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .p-calendar {
    width: 100%;
  }

  .p-dropdown {
    width: 100%;
    margin: 0.6rem 0;
    max-height: 38px;

    span {
      display: flex;
      align-items: center;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  p-inputnumber {
    width: 100%;
  }

  .p-inputnumber {
    border-radius: 5px;
    width: 100%;
    max-height: 38px;
  }
  .p-overlaypanel .p-overlaypanel-content {
    padding: 0.5rem;
    height: 100%;
    .common-popup {
      height: 100%;
      .innerContent {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        text-align: center;
        .overlay-item {
          cursor: pointer;
          transition: all 0.18s ease-in;
          padding: 9px 5px;
        }
        .overlay-item:not(:last-child) {
          border-bottom: 0.01em solid var(--f1-color);
          border-bottom: 0.01em solid var(--f1-color);
        }
        .overlay-item:hover {
          background-color: #5e5e5e21;
        }
      }
    }
  }
}

.image-fit {
  object-fit: cover;
  position: absolute;
  top: 0%;
  left: 0%;
  object-position: center;
  height: 100%;
  width: 100%;
}

:is(h1, h2, h3, h4, h5, h6, p) {
  margin-bottom: 0 !important;
}

.flex-base {
  display: flex;
  align-items: baseline;
}

.flex-vc {
  display: flex;
  align-items: center;
}

.flex-ve {
  display: flex;
  align-items: flex-end;
}

.flex-vs {
  display: flex;
  align-items: flex-start;
}

.flex-hc {
  display: flex;
  justify-content: center;
}

.flex-sb {
  display: flex;
  justify-content: space-between;
}

.flex-h-sb {
  display: flex;
  height: 100%;
  flex-direction: column;
  align-items: space-between;
  justify-content: space-between;
}

.flex-e {
  display: flex;
  justify-content: flex-end;
}

.flex-s {
  display: flex;
  justify-content: flex-start;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.text-overflow {
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
}

.text-grey {
  color: #777777 !important;
}

[class^="heading-"] {
  font-weight: 700 !important;
}

input {
  width: 100%;
}

.p-small {
  font-size: 11px !important;
  font-family: "Gotham", sans-serif !important;
}

.i-small {
  font-size: 10px !important;
}

.avatar-small {
  .p-avatar {
    width: 1.5rem;
    height: 1.5rem;
    font-size: 0.75rem;
  }
}

.p-links {
  cursor: pointer !important;
}

.no-line {
  text-decoration: none !important;
}

a {
  color: #23376e;
}

.m-0 {
  margin: 0 !important;
}

.p-green {
  color: var(--main-color);
}

.p-secondary-dark {
  color: var(--secondary_dark-color) !important;
}

.p-secondary {
  color: var(--secondary-color) !important;
}

.p-combine {
  color: var(--combinating-color) !important;
}

.text-disabled {
  color: grey !important;
}

.mL1 {
  margin-left: 5px;
}
.p-success {
  color: var(--success-color) !important;
}
.p-danger {
  color: var(--danger-color) !important;
}

.btn.btn_green:hover {
  background-color: var(--main-color-light) !important;
}

.btn.btn_green:active {
  background-color: var(--main-color-light) !important;
}

.btn.btn_green:focus-visible {
  background-color: var(--main-color-light) !important;
}

.btn.btn_green:disabled {
  background-color: var(--main-color) !important;
}

.noBorder {
  border: none;
}

p-checkbox {
  .p-checkbox .p-checkbox-box.p-highlight {
    border-color: transparent !important;
    background: $green-color !important;
  }

  .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box:hover {
    // border-color: transparent !important;
  }
}

.btn {
  transition: all 0.3s ease-in-out !important;
  font-size: 12px;
}

// COMMON CAROUSEL CLASS
.common-carousel {
  .owl-theme .owl-nav [class^="owl-"] {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    background-color: transparent;
  }
}

// COMMON TABVIEW CLASS
.common-tabView {
  .p-tabview {
    font-family: "Gotham", sans-serif !important;
    font-weight: 300 !important;
    font-size: 95%;
  }

  .p-tabview .p-tabview-nav-btn.p-link {
    color: var(--combinating-color);
  }

  .p-tabview-panels {
    padding: 0;
    color: var(--text-color);
  }

  .p-tabview .p-tabview-nav {
    border: 2px solid #ffffff;
  }

  .p-tabview .p-tabview-nav li:focus-within {
    outline: none;
  }

  .p-tabview .p-tabview-nav li .p-tabview-nav-link {
    padding: 0.5rem 1.25rem;
    border: none;
  }

  .p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {
    color: var(--main-color);
    border-bottom: 2px solid var(--combinating-color);
  }

  .p-tabview .p-tabview-nav li .p-tabview-nav-link:not(.p-disabled):focus {
    box-shadow: 0 0 0 0 !important;
  }
}

// common table
.common-table {
  .p-datatable-table {
    font-size: 80% !important;
    color: var(--main-color);
  }

  .p-datatable-thead > tr > th {
    border: none;
    padding: 0.5rem 1rem;
    // text-align: center;
    text-align: left;
    background-color: #f1f1f1;
  }

  .p-datatable-tbody > tr > td {
    padding: 0.5rem 1rem;
    font-size: 90%;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    // text-align: center;
  }
  .p-datatable-tbody > tr .cross {
    text-align: center;
  }
}

.text_left {
  text-align: left;
}

// common 3 dot dropdown
.dropbtn {
  .dropdownUnpublish {
    .p-button {
      width: 2rem;
      height: 2rem;
    }
  }
}

// common searchbar
.top-searchbar {
  .innerBox-input {
    width: 100%;
    .p-inputtext {
      background: transparent;
      border: none;
      max-height: 34px;
      width: 100%;
      box-shadow: rgb(0 0 0 / 15%) 1.95px 1.95px 2.6px;
    }
  }
  .innerBox {
    padding: 5px 8px !important;
    height: 30px;
    margin-left: 1rem;
    box-shadow: rgb(0 0 0 / 15%) 1.95px 1.95px 2.6px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

// common card Array (Dashboard)
.card-array {
  display: flex;
  flex-wrap: wrap;
  .fixed-card {
    width: 520px;
    margin: 1.5rem 1.5rem 0 0;
    height: 185px;
    overflow: hidden;
    position: relative;
    padding: 1rem;
    border: 1px solid #496661;
    border-radius: var(--common-border-radius);
    .imgCard {
      width: 37%;
      height: 96%;
    }
    .definer {
      position: absolute;
      top: 0;
      right: 0;
      background-color: var(--main-color);
      color: #ffffff;
      opacity: 0.8;
      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
      padding: 3px 15px;
      font-size: 10px;
      border-radius: 6px;
      border-top-right-radius: 0;
    }
    .createTeam,
    .createDoubles {
      padding: 2rem;
      width: 100%;
    }
    ::ng-deep {
      .p-avatar-group {
        p-avatar + p-avatar {
          margin-left: -1.5rem;
        }
      }
    }
    .actions {
      .action-box {
        border: 1px solid #f0f0f0;
        padding: 2px 5px;
        margin-left: 5px;
      }
    }
    .player-array {
      height: 100px;
      overflow: hidden;
      overflow-y: auto;
      margin-top: 10px;
    }
  }
}

.tabContainer {
  margin: 2rem;

  .innerBox {
    padding: 1.5rem;
    box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;
  }
}

.sign-container {
  background: $green-container;
  min-height: 100vh;

  .sign-row {
    min-height: 100vh;

    .centeredLogo {
      img {
        position: fixed;
        left: 30%;
        top: 50%;
        transform: translate(-50%, -50%);
      }
    }

    .welcome-card {
      position: absolute;
      top: 50%;
      left: 80%;
      transform: translate(-50%, -50%);
      border-radius: 8px;
      background: $white-container;
      padding: 2rem 1rem;
      width: 350px;
      // max-width: 30vw;
      // min-width: 30vw;

      .sign-form {
        margin: 3vh 32px;

        #otpinputs {
          margin-top: 1rem;

          .ng-otp-input-wrapper .otp-input:not(:last-child) {
            margin-right: 26px;
          }

          .otp-input {
            border: none;
            border-bottom: 2px solid black;
            background: transparent;
            border-radius: 0;
            font-size: 120%;
          }

          .otp-input:focus-visible {
            outline: none;
          }

          input {
            border: none;
            border-bottom: 2px solid;
            border-radius: 0;
            background: transparent;
            width: 20%;
            text-align: center;
            font-size: 150%;
          }

          .p-inputtext:enabled:focus {
            box-shadow: none;
          }
        }

        .changeInput {
          position: relative;

          .changeText {
            position: absolute;
            top: 50%;
            right: 5%;
            transform: translate(0, -50%);

            p a {
              text-decoration: none !important;
            }
          }
        }

        .p-inputgroup {
          max-height: 38px;
          border: 0.01em solid black !important;
          border-radius: 6px;

          .p-inputtext:enabled:focus {
            box-shadow: 0 0 0 0 !important;
          }

          .p-inputgroup-addon:last-child {
            background: white;
          }

          input {
            border: none !important;
          }
        }

        .p-inputgroup:focus {
          box-shadow: 0 0 0 0.2rem #bfdbfe;
        }

        p-dropdown {
          width: 100%;
          font-size: 13px;
        }

        .p-inputtext {
          max-height: 38px;
          font-size: 13px;
        }

        .p-dropdown {
          width: 100%;
          margin: 0.6rem 0;
          border: 0.01em solid;
          max-height: 38px;
          background: transparent;

          span {
            display: flex;
            align-items: center;
          }
        }

        p-inputnumber {
          margin: 0.6rem 0;
          width: 100%;
        }

        .p-inputnumber,
        .p-calendar {
          background: transparent;
          border-radius: 5px;
          width: 100%;
          border: 0.01em solid;

          max-height: 38px;
        }
      }

      .btn_green {
        background: $green-container;
        margin: 3vh 0 !important;
        padding: 7px 20px !important;
        width: 100%;
        color: white !important;
      }
    }

    @include query(tab) {
      .welcome-card {
        left: 72%;
      }
    }

    @include query(mobile) {
      .welcome-card {
        left: 50%;
      }

      .centeredLogo {
        img {
          width: 20% !important;
          bottom: 0vh;
          left: auto !important;
          right: 3vw;
          top: auto !important;
        }
      }
    }
  }
}

.hrLine {
  width: 100%;
  display: inline-block;
  height: 1px;
  background: #828282;
}

.dialog-component {
  padding: 2rem;
}

.btn_green {
  background: var(--main-color);
  margin: 3vh 0;
  font-size: 12px;
  padding: 7px 20px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white !important;
}

.btn_green-bordered {
  background-color: var(--primary-color);
  color: var(--main-color);
  border: 0.01em solid var(--main-color);
  margin: 0;
  font-size: 12px;
  padding: 7px 20px;
  width: 100%;

  i {
    color: var(--main-color);
  }
}

.btn_green-bordered:hover {
  // border: none;
  background-color: var(--main-color);
  color: var(--primary-color);

  i {
    color: var(--primary-color);
  }
}

.w-auto {
  width: auto !important;
}
.w-100 {
  min-width: auto !important;
  width: 100% !important;
  position: relative !important;
}
.h-100 {
  min-height: auto;
  height: 100% !important;
  position: relative;
}
input.htmlCheckbox {
  width: auto !important;
}

.settingManagement-component {
  background: #f2f4f8;
  padding: 1rem;
  position: relative;
  min-height: 75vh;
}

[class^="p-input-icon-"] {
  width: 100%;
  position: relative;

  i {
    font-size: 13px;
    position: absolute;
    top: 54%;
    transform: translate(0, -50%);
    margin-top: 0 !important;
  }

  img {
    width: 15px;
    position: absolute;
    top: 54%;
    transform: translate(0, -50%);
    margin-top: 0 !important;
  }

  input {
    font-size: 13px;
  }
}

.p-input-icon-left {
  img {
    left: 5%;
  }
}

.p-input-icon-right {
  img {
    right: 5%;
  }
}

.gapping {
  // column-gap: 5px;
  padding: 0 !important;
}

//bolder
.bolder {
  font-weight: bolder;
}

// underline code start
.uLine {
  position: relative;
  font-weight: bolder;
}
.uLine::after {
  position: absolute;
  left: 0;
  bottom: -0.4rem;
  background: var(--secondary-color);
  content: "";
  width: 100%;
  height: 0.15rem;
}
.underLine {
  position: relative;
}
.underLine::after {
  position: absolute;
  content: "";
  height: 2px;
  width: 100%;
  bottom: 0;
  left: 0;
  top: 20px;
  background-color: var(--combinating-color);
  animation: anime 1s linear 1s 1 alternate;
}

@keyframes anime {
  0% {
    width: 0px;
  }
  100% {
    width: 100%;
  }
}

.underLineWithouTAnimation {
  position: relative;
}
.underLineWithouTAnimation::after {
  position: absolute;
  content: "";
  height: 2px;
  width: 100%;
  bottom: 0;
  left: 0;
  top: 16px;
  background-color: var(--combinating-color);
}

// underline  code end

// code for schedule buttons copy from round-robin only parentFlex section
.parentFlex {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 1rem;
  .btnSchedule {
    background-color: var(--combinating-color);
    padding: 8px 15px;
    font-size: 12px;
    color: #ffffff;
    width: 120px;
    text-align: center;
  }
}

/* Importing Bootstrap SCSS file. */
// @import '~bootstrap/scss/bootstrap';

/* Importing Bootstrap SCSS file. */
// @import '~bootstrap/scss/bootstrap';

html,
body {
  height: 100%;
}
.fullFrame {
  width: 100%;
  height: 100%;
}

// live matches module

.liveMatchModule {
  .common-svg {
    height: 100vh;
  }
  .section {
    margin-bottom: 2rem;
    .topbar {
      .heading {
        color: var(--main-color);
        margin: 1rem 0;
      }
    }
  }
  .section.section-recentVid {
    background-color: #f3f3f3;
  }
  .section.section-event {
    .thumbnail {
      border-radius: var(--common-border-radius);
      img {
        border-radius: var(--common-border-radius);
      }
      .img-cover {
        background: rgba(0, 0, 0, 0.6) !important;
        color: #ffffff !important;
        padding: 1.5rem;
        font-size: small !important;
        position: relative;
        border-radius: var(--common-border-radius);
        .matchInfo {
          height: 100%;
          position: relative;
          .place {
            height: 3rem;
          }
          .bottomInfo {
            position: absolute !important;
            bottom: 0;
            z-index: 88;
          }
        }
      }
    }
  }

  .centerElement {
    .owl-card {
      .thumbnail {
        position: relative;
        height: 177px;
        img {
          position: absolute;
          object-fit: cover;
          width: 100%;
          height: 100%;
        }
        .img-cover {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.43);
        }
        .liveIcon {
          position: absolute;
          left: 4%;
          top: 4%;
        }
      }
    }
  }
  .tooltipBox {
    ::ng-deep {
      .p-tooltip-text {
        background: #ffffff !important;
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px !important;
        color: white;
        padding: 0.3rem 0.75rem !important;
      }
    }
  }
}

.viewMatches {
  .centerElement {
    .owl-card {
      margin-bottom: 2rem;
    }
  }

  .topVideo {
    .video-divider {
      .p-divider.p-divider-horizontal {
        margin: 0 !important;
      }
    }
    .videoPlayer {
      position: relative;
      height: 450px;
      .videoM3 {
        position: absolute;
        object-fit: cover;
        object-position: center;
        width: 100%;
        height: 100%;
      }
    }
    .info {
      font-size: small !important;
      .playerName {
        max-width: 200px;
      }

      p-divider {
        height: 20px;
        overflow: hidden;
      }

      .btn-videoBut {
        background-color: #ffffff;
        border: 1px solid #bcbcbc;
        color: black;
        border-radius: 50px;
        margin-left: 0.5rem;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 5px;
        width: 100px;
      }
    }
  }
}
